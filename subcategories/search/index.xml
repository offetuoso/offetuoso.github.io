<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Search on offetuoso&#39;s Blog</title>
    <link>https://offetuoso.github.io/subcategories/search/</link>
    <description>Recent content in Search on offetuoso&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <copyright>© 2021</copyright>
    <lastBuildDate>Thu, 01 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://offetuoso.github.io/subcategories/search/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>너비 우선 탐색 알고리즘</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/search/bfs/bfs-algorithm/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/search/bfs/bfs-algorithm/</guid>
      <description>너비 우선 탐색 알고리즘 BFS (Breadth-First Search)  BFS는 너비 우선 탐색이라고 부르며, 시작 위치에서 가까운 노드부터 우선적으로 탐색하는 알고리즘이다.
  BFS는 큐 자료구조를 이용하며, 구체적인 동작 과정은 아래와 같다.
   탐색 시작 노드를 큐에 삽입하고 방문 처리를 합니다. 큐에서 노드를 꺼낸 뒤에 해당 노드의 인접 노드 중에서 방문하지 않은 노드를 모두 큐에 삽입하고 방문 처리. 더 이상 2번의 과정을 수행할 수 없을 때까지 반복함.     그래프를 준비하고, 시작 노드는 1로 BFS를 시작한다.</description>
    </item>
    
    <item>
      <title>탐색 알고리즘</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/search/search-algorithm/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/search/search-algorithm/</guid>
      <description>탐색 알고리즘 탐색(search)  탐색이란 많은 양의 데이터 중에서 원하는 데이터를 찾는과정. 그래프 또는 트리의 자료구조에서 데이터를 찾는 문제가 주로 나온다. 대표적으로 DPS, BPS가 있으며, 원리를 제대로 이해해야 코딩테스트 문제를 풀 수 있다. 그런데 DPS와 BPS를 이해하기 위해서 기본 자료구조인 스택, 큐, 재귀 함수 등을 이해가 전제로 되어야한다.
 자료구조  자료구조란 데이터를 표현하고 관리하고 처리하기 위한 구조 스택과 큐는 삽입(Push)과 출력(Pop)이라는 두 핵심적인 함수로 구성 실제 구현할땐 오버플로우와 언더플로우를 고민해야한다.</description>
    </item>
    
  </channel>
</rss>
