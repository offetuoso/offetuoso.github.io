<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on offetuoso&#39;s Blog</title>
    <link>https://offetuoso.github.io/blog/</link>
    <description>Recent content in Blogs on offetuoso&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <copyright>© 2021</copyright>
    <lastBuildDate>Sun, 06 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://offetuoso.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Codility - Odd Occurrences In Array</title>
      <link>https://offetuoso.github.io/blog/algorithm/codility/codility-odd-occurrences-in-array/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/codility/codility-odd-occurrences-in-array/</guid>
      <description>Odd Occurrences In Array  Codility - Lesson2 - Array - Odd Occurrences In Array
 Task description  N개의 정수가 담긴 배열 A를 입력받습니다 배열에는 홀수 개의 요소가 포함됩니다. 배열의 각 요소는 짝을 이루지 않는 한 요소를 제외하고 동일한 값을 가진 다른 요소와 짝을 가지고 있습니다. 짝이 없는 요소를 찾으면 해결됩니다
  예를 들어, 주어진 A 배열은 이렇습니다.
  A [0] = 9 A [1] = 3 A [2] = 9A [3] = 3 A [4] = 9 A [5] = 7A [6] = 9   인덱스 0과 2에있는 요소의 값은 9입니다.</description>
    </item>
    
    <item>
      <title>Codility - Cyclic Rotation</title>
      <link>https://offetuoso.github.io/blog/algorithm/codility/codility-cyclic-rotation/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/codility/codility-cyclic-rotation/</guid>
      <description>CyclicRotation  Codility - Lesson2 - Array - CyclicRotation
 Task description  N 개의 정수로 구성된 배열 A와 오른쪽으로 회전할 횟수 K가 제공됩니다. A의 각 요소가 오른쪽으로 K 번 이동합니다. N 개의 정수와 K로 구성된 배열 A가 주어지면 배열 A가 K 번 회전 된 배열을 반환합니다.
  예를 들어, 주어진
   A = [3, 8, 9, 7, 6] K = 3    함수는 [9, 7, 6, 3, 8]을 반환해야합니다.</description>
    </item>
    
    <item>
      <title>Mysql DBeaver 설치</title>
      <link>https://offetuoso.github.io/blog/develop/database/mysql/mysql-dbeaver-install/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/database/mysql/mysql-dbeaver-install/</guid>
      <description>Mysql DBeaver 설치 DBeaver 다운로드  DBeaverinstall file 다운로드 운영체제에 맞는 DBeavr 인스톨파일을 다운받아 실행시킨다.   Mysql을 선택한다.   자신의 서버정보에 맞게 입력하면 Mysql을 사용할 수 있다.  </description>
    </item>
    
    <item>
      <title>Mysql Developer 설치</title>
      <link>https://offetuoso.github.io/blog/develop/database/mysql/mysql-developer-install/</link>
      <pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/database/mysql/mysql-developer-install/</guid>
      <description>Mysql Developer 설치 SQL Developer 다운로드  SQL Developer 다운로드 운영체제에 맞는 SQL Developer를 다운받아 압축을 풀어 실행시킨다.  mysql-connector-java 설치  mysql connector j 다운로드 링크
  Archives   Platform Independent를 선택하고 zip으로 받습니다.  Oracle Developer 설정  도구 &amp;gt; 환경설정 데이터베이스 &amp;gt; 타사JDBC드라이버 &amp;gt; 항목추가  신규 접속 생성  Mysql이 추가된것을 확인할 수 있다.   자신의 서버정보에 맞게 입력하면 Mysql Developer를 사용할 수 있다.</description>
    </item>
    
    <item>
      <title>Maven Error - Failure to transfer..</title>
      <link>https://offetuoso.github.io/blog/develop/troubleshooting/spring/maven-error-repository/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/troubleshooting/spring/maven-error-repository/</guid>
      <description>Maven error “Failure to transfer…” 문제 Failure to transfer com.google.guava:guava:jar:10.0.1 from https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempte from/to central (https://repo.maven.apache.org/maven2): The operation was cancelled.  https://repo.maven.apache.org/maven2에서 디펜던시를 전송하지 못하는 오류가 발생하였고, 로컬 저장소에 캐시되었습니다.
 해결책 1   프로젝트 우클릭 -&amp;gt; Run as -&amp;gt; Maven Install 프로젝트 우클릭 -&amp;gt; Refresh 프로젝트 우클릭 -&amp;gt; Update Project (옵션 클릭 force update of snapshots/releases)   해결책 2   실행중인 IDE(이클립스, Sts) 종료 로컬 레퍼지토리 삭제</description>
    </item>
    
    <item>
      <title>SpringBoot를 이용한 RESTful API</title>
      <link>https://offetuoso.github.io/blog/develop/backend/restapi/restful-api-2/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/restapi/restful-api-2/</guid>
      <description>SpringBoot를 이용한 RESTful API SpringBoot  스프링 프레임워크 기반 프로젝트를 복잡한 설정없이 쉽고 빠르게 만들어주는 라이브러리입니다. 사용자가 일일이 모든 설정을 하지 않아도 자주 사용되는 기본설정을 알아서 해줍니다.
  Spring Boot 장점
   라이브러리 관리의 자동화 라이브러리 버전 자동 관리 설정의 자동화 내장 Tomcat 독립적으로 실행 가능한 JAR   간단한 RESTful API 생성 Spring Starter Project로 프로젝트 생성  스프링STS4를 실행 하고, file &amp;gt; new &amp;gt; Spring Starter Project를 선택</description>
    </item>
    
    <item>
      <title>RESTFULL API (RESTful API)</title>
      <link>https://offetuoso.github.io/blog/develop/backend/restapi/restful-api-1/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/restapi/restful-api-1/</guid>
      <description>레스트풀 API(Restful Api) REST (Representational state transfer)  REST(Representational State Transfer)는 월드 와이드 웹과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처의 한 형식이다. REST는 로이 필딩(Roy Fielding)의 2000년 박사학위 논문에서 소개 엄격한 의미로 REST는 네트워크 아키텍처 원리의 모음이다. 여기서 &amp;lsquo;네트워크 아키텍처 원리&amp;rsquo;란 자원을 정의하고 자원에 대한 주소를 지정하는 방법 전반을 일컫는다. 간단한 의미로는, 웹 상의 자료를 HTTP위에서 SOAP이나 쿠키를 통한 세션 트랙킹 같은 별도의 전송 계층 없이 전송하기 위한 아주 간단한 인터페이스를 말한다.</description>
    </item>
    
    <item>
      <title>Codility - Binary Gap</title>
      <link>https://offetuoso.github.io/blog/algorithm/codility/codility-binary-gap/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/codility/codility-binary-gap/</guid>
      <description>BinaryGap  Codility - Lesson1 - Iterations - BinaryGap
 Task description   정수 N을 입력받아 2진으로 변환 후 예를 들어 N = 1041이면 함수는 5를 반환해야합니다. N은 이진 표현 10000010001 이고 따라서 가장 긴 이진 간격은 길이 5이기 때문입니다.    N = 32이면 함수는 0을 반환해야합니다. N은 이진 표현 &amp;lsquo;100000&amp;rsquo;이므로 바이너리 갭이 없습니다.
 Condition   함수 작성 : class Solution {public int solution (int N); } N은 [ 1 .</description>
    </item>
    
    <item>
      <title>도커에 Mysql 올리기-1 (Docker Mysql)</title>
      <link>https://offetuoso.github.io/blog/develop/backend/docker/docker-mysql/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/docker/docker-mysql/</guid>
      <description>도커에 Mysql 올리기 도커 버전 체크  cmd창 또는 Windows PowerShell을 싱행한다.  도커 초기화  일단 도커의 이미지/컨테이너들을 모두 지워주는 것 부터 시작하겠습니다.
 PS C:\&amp;gt; sudo docker rm -f `sudo docker ps -a -q`PS C:\&amp;gt; sudo docker rmi -f `sudo docker images` 도커 이미지 가져오기 (get Mysql Image for Docker)  Mysql의 경우 DockerHub에 있기 때문에, 쉽게 이미지를 받아 올 수 있습니다.
 DockerHub에서 mysql 이미지 받아오기   PS C:\&amp;gt; docker pull mysqlUsing default tag: latestlatest: Pulling from library/mysqlDigest: sha256:d50098d7fcb25b1fcb24e2d3247cae3fc55815d64fec640dc395840f8fa80969Status: Image is up to date for mysql:latestdocker.</description>
    </item>
    
    <item>
      <title>도커 설치 (Docker Install) </title>
      <link>https://offetuoso.github.io/blog/develop/backend/docker/docker-install/</link>
      <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/docker/docker-install/</guid>
      <description>도커 (Docker) 도커란 ?  도커란 리눅스의 응용 프로그램들을 프로세스 격리 기술을 사용해 컨테이너로 실행하고 관리하는 오픈 소스 프로젝트. 도커 웹 페이지의 기능을 인용하면 다음과 같다:
 도커 컨테이너는 일종의 소프트웨어를 소프트웨어의 실행에 필요한 모든 것을 포함하는 완전한 파일 시스템 안에 감싼다. 여기에는 코드, 런타임, 시스템 도구, 시스템 라이브러리 등 서버에 설치되는무엇이든 아우른다. 이는 실행 중인 환경에 관계 없이 언제나 동일하게 실행될 것을 보증한다. 도커의 특징   도커의 컨테이너는 각각 독립적이다.</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.05.14</title>
      <link>https://offetuoso.github.io/blog/english/202105/20210514-english-speak/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202105/20210514-english-speak/</guid>
      <description>The A is about the B (&amp;lsquo;A는 B에 관한것&amp;rsquo;)  The video is about the effect of exercising regularly on our body. (규칙적인 운동이 우리의 몸에 미치는 영향)
 the effect of A on B (&amp;lsquo;A가 B에 미치는 영향&amp;rsquo;) = the influence of A on B  the effect of exercising regularly on our body. (규칙적인 운동이 우리의 몸에 미치는 영향.)
 the influence of A on B (&amp;lsquo;A가 B에 미치는 영향&amp;rsquo;)  the influence of exercising regularly on our body.</description>
    </item>
    
    <item>
      <title>탐색 알고리즘</title>
      <link>https://offetuoso.github.io/blog/algorithm/search/search-algorithm/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/search/search-algorithm/</guid>
      <description>탐색 알고리즘 탐색(search)  탐색이란 많은 양의 데이터 중에서 원하는 데이터를 찾는과정. 그래프 또는 트리의 자료구조에서 데이터를 찾는 문제가 주로 나온다. 대표적으로 DPS, BPS가 있으며, 원리를 제대로 이해해야 코딩테스트 문제를 풀 수 있다. 그런데 DPS와 BPS를 이해하기 위해서 기본 자료구조인 스택, 큐, 재귀 함수 등을 이해가 전제로 되어야한다.
 자료구조  자료구조란 데이터를 표현하고 관리하고 처리하기 위한 구조 스택과 큐는 삽입(Push)과 출력(Pop)이라는 두 핵심적인 함수로 구성 실제 구현할땐 오버플로우와 언더플로우를 고민해야한다.</description>
    </item>
    
    <item>
      <title>왕실의 기사 (구현 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/implements/202105/royal_knight/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/implements/202105/royal_knight/</guid>
      <description>[문제1] 왕실의 기사 [문제] 왕실의 기사 : 문제 설명  행복 왕국의 왕실 정원은 체스판과 같은 8 × 8 좌표 평면이다. 왕실 정원의 특정한 한 칸에 나이트가 서있다. 나이트는 매우 충성스러운 신하로서 매일 무술을 연마한다 나이트는 말을 타고 있기 때문에 이동을 할 때는 L자 형태로만 이동할 수 있으며 정원 밖으로는 나갈 수 없다 나이트는 특정 위치에서 다음과 같은 2가지 경우로 이동할 수 있다
   수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기   수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기   이처럼 8 × 8 좌표 평면상에서 나이트의 위치가 주어졌을 때 나이트가 이동할 수 있는 경우의 수를 출력하는 프로그램을 작성하라.</description>
    </item>
    
    <item>
      <title>Git 캐시 삭제</title>
      <link>https://offetuoso.github.io/blog/develop/git/202105/time/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/git/202105/time/</guid>
      <description>Git 캐시(cache) 삭제 // 원격 저장소와 로컬 저장소 파일을 삭제$ git rm 파일명// 원격 저장소에 있는 파일만 삭제하고, //로컬 저장소에 있는 파일은 삭제하지 않음$ git rm --cached 파일명 rm -r 옵션// 파일 삭제$ git rm --cached 파일명// 폴더 하위의 모든 파일을 삭제$ git rm -r --cached 폴더명 </description>
    </item>
    
    <item>
      <title>시각 (구현 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/implements/202105/time/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/implements/202105/time/</guid>
      <description>[문제1] 시각 [문제] 시각 : 문제 설명  정수 N이 입력되면 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서 3이 하나라도 포함되는 모든 경우의 수를 구하는 프로그램을 작성하라. 예를 들어 1을 입력했을 때
  다음은 3이 하나라도 포함되어 있으므로 세어야 하는 시각이다 00시 00분 03초 00시 13분 30초
  반면에 다음은 3이 하나도 포함되어 있지 않으므로 세면 안 되는 시각이다 00시 02분 55초 01시 27분 45초
 [문제] 조건  조건 풀이시간 15분 시간제한 2초, 메모리 128mb</description>
    </item>
    
    <item>
      <title>상하좌우 (구현 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/implements/202104/up-down-left-right/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/implements/202104/up-down-left-right/</guid>
      <description>[문제1] 상하좌우 [문제] 상하좌우 : 문제 설명  여행가 A는 N × N 크기의 정사각형 공간 위에 서 있다. 이 공간은 1 × 1 크기의 정사각형으로 나누어져 있다. 가장 왼쪽 위 좌표는 (1, 1)이며, 가장 오른쪽 아래 좌표는 (N, N)에 해당한다. 여행가 A는 상, 하, 좌, 우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1, 1)이다. 우리 앞에는 여행가 A가 이동할 계획이 적힌 계획서가 놓여 있다
  계획서에는 하나의 줄에 띄어쓰기를 기준으로 L, R, U, D 중 하나의 문자가 반복적으로 적혀있다.</description>
    </item>
    
    <item>
      <title>숫자 카드 게임 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/greedy/202104/games-of-number-card/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/greedy/202104/games-of-number-card/</guid>
      <description>[문제1] 숫자 카드 게임 [문제] 숫자 카드 게임 : 문제 설명  숫자 카드 게임은 여러 개의 숫자 카드 중에서 가장 높은 숫자가 쓰인 카드 한 장을 뽑는 게임이다. 단, 게임의 룰을 지키며 카드를 뽑아야 하고 룰은 다음과 같다.
  숫자가 쓰인 카드들이 N x M 형태로 놓여 있다. 이때 N은 행의 개수를 의미하며, M은 열의 개수를 의미한다. 먼저 뽑고자 하는 카드가 포함되어 있는 행을 선택한다. 그다음 선택된 행에 포함된 카드들 중 가장 숫자가 낮은 카드를 뽑아야 한다.</description>
    </item>
    
    <item>
      <title>큰수의 법칙 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/greedy/202104/law-of-large-number/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/greedy/202104/law-of-large-number/</guid>
      <description>[문제1] 큰 수의 법칙 [문제] 큰 수의 법칙 : 문제 설명  출제자는 큰 수의 법칙을 본인만의 방식으로 다르게 사용하고 있다. 이 큰 수의 법칙은 다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰수를 만드는 법칙이다. 단 배열의 특정한 인덱스(번호)에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없는 것이 이 법칙의 특징이다.
  예를 들어 순서대로 2, 4, 5, 4, 6으로 이루어진 배열이 있을 때 M이 8이고, K가 3이라고 가정하자.</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.04.08</title>
      <link>https://offetuoso.github.io/blog/english/202104/20210408-english-speak/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202104/20210408-english-speak/</guid>
      <description>a. touching (&amp;lsquo;감동시키는&amp;rsquo;) a. entertaining (&amp;lsquo;재미있는&amp;rsquo;)  It was really entertaining and the storyline was also a bit touching(sad). (정말 재미 있었고 스토리 라인도 약간 감동적이었습니다.)
 These days (&amp;lsquo;요즘&amp;rsquo;) = Nowadays  These day , I go to bed in 1 am and (get up) 7 am (요즘은 새벽 1시에 자고 아침 7시에 일어나)
 On weekends (&amp;lsquo;주말에&amp;rsquo;) get up at (~ time) (&#39;-시에 일어나&#39;) still (&amp;lsquo;여전히&amp;rsquo;)  On weekends, I get up at 1 pm and still go to bed the same (주말에는 오후 1시에 일어나도 똑같이 잠자리에 든다)</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.04.07</title>
      <link>https://offetuoso.github.io/blog/english/202104/20210407-english-speak/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202104/20210407-english-speak/</guid>
      <description>go to ~ (&#39;-에 간다&#39;)  I go to company. (나는 회사에 간다.)
 be going to ~ (&#39;-에 갈꺼다&#39;)  I&amp;rsquo;m going to market. (나는 마트에 간다. 갈예정이 있음 )
 be going to go to ~ (&#39;-에 갈꺼야&#39;)  I&amp;rsquo;m going to go to korea. (나는 한국에 갈꺼야. 아직 계획은 세우지 않았음 )
 went to ~ (&#39;- 갔었다 &amp;lsquo;)  I went to starfield. (나는 스타필드에 갔었다.)</description>
    </item>
    
    <item>
      <title>모험가 길드 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/greedy/202104/adventurer-guild/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/greedy/202104/adventurer-guild/</guid>
      <description>[문제1] 1이 될때까지 [문제] 1이 될때까지 : 문제 설명  어떠한 수 N이 1이 될때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 합니다. 단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있습니다.
   N에서 1을 뺍니다. N에서 K로 나눕니다.    예를 들어 N이 17, K가 4라고 가정하자. 이때 1번의 과정을 한 번 수행하면 N은 16이 된다. 이후에 2번의 과정을 두 번 수행하면 N은 1이 된다.</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.04.02</title>
      <link>https://offetuoso.github.io/blog/english/202104/20210402-english-speak/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202104/20210402-english-speak/</guid>
      <description>prepare (&amp;lsquo;준비하다&amp;rsquo;)  Pick/Choose two questions and prepare your answers. (두 가지 질문을 고르고 답을 준비하십시오.)
 the meaning of the ~ (&#39;-의 의미&#39;)  the meaning of the name. (이름의 의미) The meaning of one’s name may have an influence on their life. (이름의 의미가 그들의 삶에 영향을 미칠 수 있습니다.)
 to have influence on ~ (&#39;-에 영향을 미치다&#39;)  to have influence on life (삶에 영향을 미치다)</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.04.01</title>
      <link>https://offetuoso.github.io/blog/english/202104/20210401-english-speak/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202104/20210401-english-speak/</guid>
      <description>##have influence on ~ (&#39;-에 영향을 미치다&#39;)
 동학개미 had some influence on the national stock market. (&amp;lsquo;동학 개미는 전국 주식 시장에 영향을 미쳤습니다.&#39;) I think, he has achievement that influence on some developer (&amp;lsquo;그는 일부 개발자에게 영향을 미치는 업적을 가지고 있다고 생각합니다.&#39;) I think, his achievement has some influence on [software developers/engineers.] (&amp;lsquo;그는 일부 개발자에게 영향을 미치는 업적을 가지고 있다고 생각합니다.&#39;) Netflix now has a huge influence on the media industry.</description>
    </item>
    
    <item>
      <title>더하기 혹은 곱하기 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/greedy/202103/sum-and-multiply/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/greedy/202103/sum-and-multiply/</guid>
      <description>[문제1] 곱하기 혹은 더하기 [문제] 곱하기 혹은 더하기 : 문제 설명  각 자리가 숫자(0부터 9)로만 이루어진 문자열 S가 주어졌을 때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 &amp;lsquo;x&amp;rsquo; 혹은 &amp;lsquo;+&amp;rsquo; 연산자를 넣어 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성. 단, + 보다 x를 먼저 계산하는 일반적인 방식과는 달리, 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정.
   예를 들어, 02984라는 문자열로 만들 수 있는 가장 큰 수는 ((((0 + 2)x 9)x 8)x 4) = 576이다.</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.03.26</title>
      <link>https://offetuoso.github.io/blog/english/202103/20210326-english-speak/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202103/20210326-english-speak/</guid>
      <description>prefers a to b (&amp;lsquo;b 보다 a를 더 선호&amp;rsquo;)  we are prefers apple to banana (&amp;lsquo;우리는 바나나보다 사과를 선호합니다.&#39;)
 giving birth (&amp;lsquo;출산&amp;rsquo;) = when the baby was born  when the mother was giving birth (&amp;lsquo;어머니가 출산 할때&amp;rsquo;)
 n. name (&amp;lsquo;이름을 지어주다&amp;rsquo;)  How do American Indian women name their babies? (&amp;lsquo;아메리칸 인디언 여성들은 아기의 이름을 어떻게 지어주나요?&#39;)
 compound words (&amp;lsquo;합성어&amp;rsquo;)  handphone is compound word that Consists of two word?</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.03.25</title>
      <link>https://offetuoso.github.io/blog/english/202103/20210325-english-speak/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202103/20210325-english-speak/</guid>
      <description>Introduction (&amp;lsquo;소개, 서론&amp;rsquo;) Introduction → Body → Conclusion  This pagraph is book of Introduction (&amp;lsquo;이 단락은 서론입니다.&#39;)
 topic sentence (&amp;lsquo;주제 문장&amp;rsquo;)  this is topic sentence in paragraph (&amp;lsquo;이것은 단락의 주제 문장입니다&amp;rsquo;)
 Q. What is a must-included item when you summarize a text? (&amp;lsquo;글을 요약할때 꼭 포함되어야 하는것?&#39;)  main points, paraphrase the topic sentence
 plagiarism (&amp;lsquo;표절&amp;rsquo;)  this book has relate to rumor of plagiarism (&amp;lsquo;이 책은 표절 소문과 연루되어 있습니다&amp;rsquo;)</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.03.24</title>
      <link>https://offetuoso.github.io/blog/english/202103/20210324-english-speak/</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202103/20210324-english-speak/</guid>
      <description>Read the sentences (&amp;lsquo;문장 읽기&amp;rsquo;)  you must to read the sentences in book (&amp;lsquo;책에있는 문장을 읽어야합니다&amp;rsquo;)
 Read the sentences (&amp;lsquo;문장 읽기&amp;rsquo;)  you must to read the sentences in book (&amp;lsquo;책에있는 문장을 읽어야합니다&amp;rsquo;)
 some (&amp;lsquo;약간, 전체는 아니고, 아예 아닌것도 아님&amp;rsquo;)  some people who attempt to change (&amp;lsquo;변화를 시도하는 사람들&amp;rsquo;)
 새로운 단어 passage 문구 / 통로silently 잠자코, 조용히repeat 반복intonation 말의 높낮이some not all but not none 문법오류 I was weekends also studying English and.</description>
    </item>
    
    <item>
      <title>1이 될때까지 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/greedy/202103/make-one/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/greedy/202103/make-one/</guid>
      <description>[문제1] 1이 될때까지 [문제] 1이 될때까지 : 문제 설명  어떠한 수 N이 1이 될때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 합니다. 단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있습니다.
   N에서 1을 뺍니다. N에서 K로 나눕니다.    예를 들어 N이 17, K가 4라고 가정하자. 이때 1번의 과정을 한 번 수행하면 N은 16이 된다. 이후에 2번의 과정을 두 번 수행하면 N은 1이 된다.</description>
    </item>
    
    <item>
      <title>거스름돈 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/greedy/202103/reverse-charge/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/greedy/202103/reverse-charge/</guid>
      <description>[문제1] 거스름돈 [문제] 거스름돈 : 문제 설명  당신은 음식점의 계산을 도와주는 점원입니다. 카운트에서는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정합니다. 손님에게 거슬러 주어야 할 돈이 N원일 때, 거슬러 주어야 할 동전의 최소 개수를 구하세요. 단, 거슬로 줘야 할 돈은 N은 항상 10의 배수입니다.
 [문제] 거스름돈 : 문제 해결 아이디어   최적의 해를 빠르게 구하기 위해서는 가장 큰 화폐의 단위부터 돈을 거슬러 주면 됩니다. N원을 거슬러 줘야 할 때, 가장먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러줍니다.</description>
    </item>
    
    <item>
      <title>그리디 알고리즘</title>
      <link>https://offetuoso.github.io/blog/algorithm/greedy/greedy-algorithm/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/greedy/greedy-algorithm/</guid>
      <description>그리디 알고리즘(탐욕법) 그리디 알고리즘이란 ?  그리디 알고리즘이란
 그리디 알고리즘(탐욕법)은 현재상황에서 가장 좋은 것만 고르는 방법을 의미. 일반적인 그리디 알고리즘은 문제를 풀기 위한 최소한의 아이디어를 떠올릴 있는 능력을 요구. 그리디 해법은 그 정당성 분석이 중요. 단순히 가장 좋아 보이는 것을 반복적으로 선택해도 최적의 해를 구할 수 있는지 검토 필요.   [문제 상황] 루트 노드로 부터 시작하여 가는 노드의 합을 최대로 만들고 싶습니다.  Q. 최적의 해는 무엇인가요 ?</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.03.19</title>
      <link>https://offetuoso.github.io/blog/english/202103/20210319-english-speak/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202103/20210319-english-speak/</guid>
      <description>do you mind?  (1) Are you okay/fine with it? (&amp;lsquo;괜찮나요?&#39;) Do you mind if I change the schedule? 괜찮다면, 스케쥴을 변경해도 될까요? (2) Mind your own business. (&amp;lsquo;니 일이나 신경써.&#39;) Do you mind? 니 일이나 신경써.
 attempt to ~ (&#39;-를 시도하다.&#39;)  they are attempt to find something 그들은 무언갈 찾으려 한다. i attempt to speaking english 나는 영어로 말하길 시도한다.
 I had a meeting ~ (&#39;-를 만났다.</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.03.17</title>
      <link>https://offetuoso.github.io/blog/english/202103/20210317-english-speak/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202103/20210317-english-speak/</guid>
      <description>Did you take a look at ~? (&#39;-보셨나요?&#39;)  Did you take a look at the Book 책 보셨나요? Did you take a look at sky? 하늘을 보셨나요?
 I took a look at ~ (&amp;lsquo;나는 -를 보았다.&#39;)  I took a look at the book, 1 hour ago 1 시간 전에 책을 봤어요. I was took a look at sky last day 나는 어제 하늘을 봤어요
 a. impressed (&amp;lsquo;깊은 인상&amp;rsquo;) n.</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.03.16</title>
      <link>https://offetuoso.github.io/blog/english/202103/20210316-english-speak/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202103/20210316-english-speak/</guid>
      <description>I use ~ (&amp;lsquo;난 -를 사용한다.&#39;)  I use Java 난 자바를 사용한다. I use Korean 난 한국어를 사용한다.
 I’m preparing ~ (&#39;-를 준비중입니다&amp;rsquo;)  ** I’m preparing to change job ** 나는 이직을 준비중입니다. ** I’m preparing to party in my house ** 우리 집에서 파티를 준비하고 있어요.
 ~ is intense (&#39;-이 ~빡세다~힘들다.&#39;)
 Work is not intense 일은 힘들지 않다. Always Study is intense 공부는 힘들다.</description>
    </item>
    
    <item>
      <title>잉그올 영어 회화 21.03.15</title>
      <link>https://offetuoso.github.io/blog/english/202103/20210315-english-speak/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/english/202103/20210315-english-speak/</guid>
      <description>I’m used to ~ (&amp;lsquo;난 -에 익숙해&amp;rsquo;)  I&amp;rsquo;m used to you 난 너에게 익숙해 I&amp;rsquo;m used to working overtime 난 야근에 익숙해
 I&amp;rsquo;m afraid ~ (&amp;lsquo;유감스럽지만,&#39;)  I&amp;rsquo;m afraid Rainy outside 유감이지만, 밖에 비가 오는 것 같아 **I&amp;rsquo;m afraid ** 유감이지만, 밖에 비가 오는 것 같아
 I’m working on ~ (&amp;lsquo;지금 -를 하고있어&amp;rsquo;)  I’m working on my English speaking 난 영어 말하기를 공부하고 있어 i&amp;rsquo;m working on study Algorithm 난 알고리즘을 공부하고 있어</description>
    </item>
    
    <item>
      <title>자바의 기본개념</title>
      <link>https://offetuoso.github.io/blog/develop/java/basic-java/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/java/basic-java/</guid>
      <description>자바 자바가상머신 (JVM) 자바의 장점 자바의 단점 자바의 기초 문법 객체지향과 자바 객체지향 프로그램 언어 객체 상속 오버라이딩 (Overriding)  오버라이딩이란?
  사전적 의미로는 more important than any other considerations 번역해 보면 다른 고려 사항보다 더 중요하다이다.
  부모 클래스로 부터 상속받은 메소드를 자식 클래스에서 재정의 하여, 덮어 쓰는 것이다. 상속받은 메소드를 그대로 사용할 수도 있지만, 자식 클래스에서 상황에 맞게 변경해야 하는 경우 오버라이딩을 사용한다.
  오버라이딩을 사용하기 위한 조건에는 부모 클래스의 메소드를 재정의하는 것이므로 이름, 매개변수 리턴 값이 모두 같아야 한다.</description>
    </item>
    
  </channel>
</rss>
