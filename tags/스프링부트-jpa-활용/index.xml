<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>스프링부트 JPA 활용 on offetuoso&#39;s Blog</title>
    <link>https://offetuoso.github.io/tags/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-jpa-%ED%99%9C%EC%9A%A9/</link>
    <description>Recent content in 스프링부트 JPA 활용 on offetuoso&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <copyright>© 2021</copyright>
    <lastBuildDate>Sat, 02 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://offetuoso.github.io/tags/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-jpa-%ED%99%9C%EC%9A%A9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[스프링부트 JPA 활용] 회원 목록 화면 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-list-development/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-list-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   홈 화면과 레이아웃 회원 리스트   MemberController.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 회원 등록 화면 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-join-view-development/</link>
      <pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-join-view-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   홈 화면과 레이아웃 회원 등록  Member Controller 회원가입 페이지 이동(get) 매핑 추가  java/jpabook/jpashop/controller/MemberController.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 웹 계층 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/web-layer-development/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/web-layer-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   웹 계층 개발  홈 화면과 레이아웃   java/jpabook/jpashop/controller/HomeController.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 주문 검색 기능 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/order-search-development/</link>
      <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/order-search-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   주문 검색 기능 개발  JPA에서 동적 쿼리를 어떻게 해결해야 하는가   화면을 보시면 회원명과 주문상태를 검색조건으로 필터링 할 수 있는 기능인 것을 확인 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 주문 기능 테스트</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/order-logic-test-code/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/order-logic-test-code/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   주문 기능 테스트   테스트 할때는 스프링 기능 없이 메소드 하나 하나 단위 테스트 하는 것이 바람직하나 스프링과 JPA가 잘 엮여서 동작하는 것을 테스트 하기 때문에 통합테스트로 작성합니다.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 주문 서비스 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/2-order-service-development/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/2-order-service-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   주문 서비스 개발   java/jpabook/jpashop/service/OrderService.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 주문 도메인 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/order-domain-development/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/order-domain-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   주문 도메인 개발   지금까지 설명했던것 중에 가장 중요한 부분입니다.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 상품 서비스 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/product-logic-test-code/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/product-logic-test-code/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   상품 기능 테스트  테스트 요구사항    상품등록을 성공해야한다.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 상품 리포지토리 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/1-product-repository-development/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/1-product-repository-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   상품 리포지토리 개발  상품 리포지토리   java/jpabook/jpashop/repository/ItemRepository.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 상품 도메인 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/product-domain-development/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/product-domain-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   상품 도메인 개발  구현 기능   상품등록 상품 목록 조회 상품 수정   구현 순서   상품 엔티티 개발(비즈니스 로직 추가) 상품 리포지토리 개발 상품 서비스 개발 상품 기능 테스트   상품 엔티티 개발(비즈니스 로직 추가)   Item.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 회원 기능 테스트</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-logic-test-code/</link>
      <pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-logic-test-code/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   회원 기능 테스트  테스트 요구사항    회원가입을 성공해야한다.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 회원 서비스 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-service-development/</link>
      <pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-service-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   회원 서비스 개발  서비스 디렉토리 생성  java/jpabook/jpashop/service 위치에 리포지토리 경로 생성</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 회원 도메인 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-domain-development/</link>
      <pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/member-domain-development/</guid>
      <description>애플리케이션 구현  목차    회원 도메인 개발   회원 리포지토리 개발 회원 서비스 개발 기능 테스트  상품 도메인 개발   상품 엔티티개발(비즈니스 로직추가) 상품 리포지토리 개발 상품 서비스 개발  주문 도메인 개발   주문, 주문상품 엔티티 개발 주문 리포지토리 개발 주문 서비스 개발  웹 계층 개발   홈 화면과 레이아웃 회원 등록 회원 목록 조회 상품 등록 상품 목록 상품 수정 변경 감지와 병함(merge) 상품 주문 주문 목록 검색, 취소  API 개발 기본   회원 등록 API 회원 수정 API 회원 조회 API  API 개발 고급   조회용 샘플 데이터 입력 지연 로딩과 조회 성능 최적화 페이징과 한계 돌파 OSIV와 성능 최적화  다음으로   스프링 데이터 JPA 소개 QueryDSL 소개 마무리   회원 도메인 개발  구현 기능    회원 등록 회원 목록 조회   구현순서    회원 엔티티 코드 다시 보기 회원 리포지토리 개발 회원 서비스 개발 회원 기능 테스트   회원 엔티티 코드 다시 보기   java/jpabook/jpashop/domain/Member.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 애플리케이션 구현 준비</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/preparing-for-application-implementation/</link>
      <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/preparing-for-application-implementation/</guid>
      <description>애플리케이션 구현 준비  목차    구현 요구사항 애플리케이션 아키텍쳐   구현 요구사항   이번에는 애플리케이션을 어떻게 구현할지에 대한 구현 요구사항이랑 애플리케이션 아키텍처에 대하여 정리하겠습니다.
  도메인 설계가 다 끝났는데, 그것은 데이터 적인 설계였고 이번에는 어디까지 구현할지 범위에 대한 요구사항을 정리해 보도록 하겠습니다.
   회원 기능  회원 등록 회원 조회   상품 기능  상품 등록 상품 수정 상품 조회   주문 기능  상품 주문 주문 내역 조회 주문 취소     회원 기능  회원 등록   회원 등록하는 페이지이며, 비지니스 메서드를 통해 회원등록 구현 되어야 합니다.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 엔티티 클래스 개발</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/entity-class-development/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/entity-class-development/</guid>
      <description>도메인 분석 설계  목차    요구사항 분석 도메인 모델과 테이블 설계 엔티티 클래스 개발 엔티티 설계시 주의점   엔티티 클래스 개발    예제에서는 설명을 쉽게하기 위해 엔타타 클래스에 Getter, Setter를 모두 열고, 최대한 단순하게 설계 실무에서는 가급적 Getter, Setter는 꼭 필요한 경우에만 사용하는 것을 추천   도메인 패키지 생성   jpabook/jpashop/domain 패키지를 생성하여 추가할 엔티티 클래스들을 모아두도록 하겠습니다.
  기존의 jpabook/jpashop/entity의 패키지는 지우도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 도메인 모델과 테이블 설계</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/domain-model-and-db-architecture/</link>
      <pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/domain-model-and-db-architecture/</guid>
      <description>도메인 분석 설계  목차    요구사항 분석 도메인 모델과 테이블 설계 엔티티 클래스 개발 엔티티 설계시 주의점   도메인 모델과 테이블 설계  도메인 모델 설계   회원은 주문 여러개를 주문 할 수 있습니다. 회원과 주문은 1:N의 관계 입니다.
  회원은 주문을 할때 한번에 여러 상품을 주문할 수 있습니다. 상품은 또한 여러개의 각각의 주문에 담길 수 있습니다. 주문에 여러개의 상품이 담길 수 있기 때문에</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 요구사항 분석</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/requirement-analysis/</link>
      <pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/requirement-analysis/</guid>
      <description>도메인 분석 설계  목차    요구사항 분석 도메인 모델과 테이블 설계 엔티티 클래스 개발 엔티티 설계시 주의점   요구사항 분석   회원기능
 회원가입 - 이름, 도시, 거리, 우편번호 입력 받아 회원을 등록 회원 목록 - 가입자 seq, 이름, 도시, 주소, 우편번호 조회가능    상품기능
 상품등록 - 상품명, 가격, 수량, 저자, ISBN 입력받아 상품등록 상품목록 - 등록된 상품 seq, 상품명, 가격 재고수량, 수정버튼 상품수정 - 상품명, 가격, 수량, 저자, ISBN 저장한 값 로드 후 상품수정    상품 주문</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] JPA 동작확인</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/jpa-start/</link>
      <pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/jpa-start/</guid>
      <description>JPA 동작확인  JPA와 DB설정   여태까지 application.properties 를 이용해왔는데, 간혹 yml을 사용하는 것을 봐왔는데 이번에 사용하게 되었습니다.
  resources/application.properties를 확장자를 변경하여 백업(또는 제거) 하고 같은 resources/ 위치에 application.yml 생성
  resources/application.yml
 spring:datasource:url: jdbc:h2:tcp://localhost/~/jpashop; # MVCC=true H2 1.4.200 버전부터 MVCC 옵션이 제거되었습니다. username: sapassword:driver-class-name: org.h2.Driverjpa:hibernate:ddl-auto: create # 애플리케이션 동작 시점에 엔티티 재생성properties:# show_sql: true #sysout을 통해 남기는 sqlformat_sql: truedatabase: h2devtools:livereload:enabled: true # livereload 사용시 활성화restart:enabled: false #운영 에서는 제거.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] H2 데이터베이스 설치 및 세팅</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/h2-preferences/</link>
      <pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/h2-preferences/</guid>
      <description>H2 데이터베이스 설치 및 세팅  H2 데이터베이스   개발이나 테스트 용도로 가볍고 편리한 DB, 웹 화면 제공
 다운로드 및 설치    사용 환경에 따라 받으시면 되며, 저는 1.4.200 버전을 받아 설치 하였습니다.
 H2 Database 설치   JPA 시작 과거 포스팅 참조
  H2 Database 설치  H2 홈페이지에서 OS에 맞는 설치 파일을 다운로드한다.
  C:\Program Files (x86)\H2\bin\h2.bat 실행
  jdbc:h2:~/jpashop (최초 1회, 세션키 유지한 상태로 실행)</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] View 환경 설정</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/view-preferences/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/view-preferences/</guid>
      <description>View 환경 설정 Thymeleaf  Thymeleaf
  Spring에서도 밀고 있고, 스프링과 많은 기능을 제공하고 있어, Jsp 보다 Thymeleaf를 사용하는 추세입니다.
  장점은
  자연 템플릿 (Natural Templates) 마크업을 깨트리지 않고 html 마커 안에 프로그래밍 문법을 넣어 기능을 개발 할 수 있습니다. WAS 없이도 브라우저만으로도 템플릿의 결과물을 볼 수 있습니다.
 &amp;lt;table&amp;gt;&amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th th:text=&amp;quot;#{msgs.headers.name}&amp;quot;&amp;gt;Name&amp;lt;/th&amp;gt;&amp;lt;th th:text=&amp;quot;#{msgs.headers.price}&amp;quot;&amp;gt;Price&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;tr th:each=&amp;quot;prod: ${allProducts}&amp;quot;&amp;gt;&amp;lt;td th:text=&amp;quot;${prod.name}&amp;quot;&amp;gt;Oranges&amp;lt;/td&amp;gt;&amp;lt;td th:text=&amp;quot;${#numbers.formatDecimal(prod.price, 1, 2)}&amp;quot;&amp;gt;0.</description>
    </item>
    
    <item>
      <title>[스프링부트 JPA 활용] 프로젝트 생성</title>
      <link>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/new-project-setting/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/develop/backend/using-springboot-jpa/new-project-setting/</guid>
      <description>스프링부트 JPA 활용(Using SpringBoot JPA)  목차    프로젝트 생성 라이브러리 살펴보기 H2 데이터베이스 설치 JPA와 DB 설정, 동작확인   프로젝트 생성    스프링 부트 스타터(https://start.spring.io/) 사용기능 : Web, Thymeleaf, JPA, H2, Lombok  groupId : jpabook artifactId : jpashop      프로젝트 타입은 Gradle Project 최근에는 Maven이 아니라 Gradle이 많이 사용된다고 합니다.
  언어는 당연히 자바 !
  스프링부트는 안정화 버전을 추천하며, 전 2.</description>
    </item>
    
  </channel>
</rss>
