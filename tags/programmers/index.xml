<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmers on offetuoso&#39;s Blog</title>
    <link>https://offetuoso.github.io/tags/programmers/</link>
    <description>Recent content in Programmers on offetuoso&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <copyright>© 2021</copyright>
    <lastBuildDate>Sat, 24 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://offetuoso.github.io/tags/programmers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Programmers 68644 두 개 뽑아서 더하기</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-68644-take-two-and-add/</link>
      <pubDate>Sat, 24 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-68644-take-two-and-add/</guid>
      <description>Programmers - 68644 두 개 뽑아서 더하기 Task description 원문 : Programmers 68644 링크
 정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요.
 Condition   numbers의 길이는 2 이상 100 이하입니다. numbers의 모든 수는 0 이상 100 이하입니다.   input output  입출력 예
    numbers result     [2,1,3,4,1] [2,3,4,5,6,7]   [5,0,2,7] [2,5,7,9,12]     입출력 예 설명</description>
    </item>
    
    <item>
      <title>Programmers 12973 짝지어 제거하기</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-12973-remove-by-pair/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-12973-remove-by-pair/</guid>
      <description>Programmers - 12973 짝지어 제거하기 Task description 원문 : Programmers 12973 링크
 짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다. 이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다. 문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요. 성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.</description>
    </item>
    
    <item>
      <title>Programmers 17681 비밀지도</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-17681-secret-map/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-17681-secret-map/</guid>
      <description>Programmers - 17681 비밀지도 Task description 원문 : Programmers 17681 링크
 네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.
   지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 &amp;ldquo;공백&amp;rdquo;(&amp;quot; &amp;ldquo;) 또는 &amp;ldquo;벽&amp;rdquo;(&amp;quot;#&amp;quot;) 두 종류로 이루어져 있다.  전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다.</description>
    </item>
    
    <item>
      <title>Programmers 42889 실패율</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42889-failure-rate/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42889-failure-rate/</guid>
      <description>Programmers - 42889 실패율 Task description 원문 : Programmers 42889 링크
 슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다.
  이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 역시 슈퍼 개발자라 대부분의 로직은 쉽게 구현했지만, 실패율을 구하는 부분에서 위기에 빠지고 말았다.</description>
    </item>
    
    <item>
      <title>Programmers 17682 다트 게임</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-17682-dart-game/</link>
      <pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-17682-dart-game/</guid>
      <description>Programmers - 17682 다트 게임 Task description 원문 : Programmers 17682 링크
 카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다. 다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는 게임으로, 모두가 간단히 즐길 수 있다. 갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다.
  다트 게임은 총 3번의 기회로 구성된다. 각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다.</description>
    </item>
    
    <item>
      <title>Programmers 67256 키패드 누르기</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-67256-keypad-press/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-67256-keypad-press/</guid>
      <description>Programmers - 67256 키패드 누르기 Task description 원문 : Programmers 67256 링크
 스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다.
  이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.
맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다.
  엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거리로 1에 해당합니다. 왼쪽 열의 3개의 숫자 1, 4, 7을 입력할 때는 왼손 엄지손가락을 사용합니다.</description>
    </item>
    
    <item>
      <title>Programmers 42862 체육복</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42862-gym-suit/</link>
      <pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42862-gym-suit/</guid>
      <description>Programmers - 42862 체육복 Task description 원문 : Programmers 42862 링크
 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.</description>
    </item>
    
    <item>
      <title>Programmers 81301 숫자 문자열과 영단어</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-81301-numeric-strings-and-english-words/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-81301-numeric-strings-and-english-words/</guid>
      <description>Programmers - 81301 숫자 문자열과 영단어 Task description 원문 : Programmers 81301 링크
 네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게 숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는 원래 숫자를 찾는 게임입니다.
  다음은 숫자의 일부 자릿수를 영단어로 바꾸는 예시입니다.
 1478 → &amp;quot;one4seveneight&amp;quot;234567 → &amp;quot;23four5six7&amp;quot;10203 → &amp;quot;1zerotwozero3&amp;quot;  이렇게 숫자의 일부 자릿수가 영단어로 바뀌어졌거나, 혹은 바뀌지 않고 그대로인 문자열 s가 매개변수로 주어집니다. s가 의미하는 원래 숫자를 return 하도록 solution 함수를 완성해주세요.</description>
    </item>
    
    <item>
      <title>Programmers 64061 크레인 인형 뽑기</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-64061-crane-puppet-game/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-64061-crane-puppet-game/</guid>
      <description>Programmers - 64061 크레인 인형 뽑기 Task description 원문 : Programmers 64061 링크
 게임개발자인 &amp;ldquo;죠르디&amp;quot;는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다. &amp;ldquo;죠르디&amp;quot;는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.
  게임 화면은 &amp;ldquo;1 x 1&amp;rdquo; 크기의 칸들로 이루어진 &amp;ldquo;N x N&amp;rdquo; 크기의 정사각 격자이며 위쪽에는 크레인이 있고 오른쪽에는 바구니가 있습니다. (위 그림은 &amp;ldquo;5 x 5&amp;rdquo; 크기의 예시입니다). 각 격자 칸에는 다양한 인형이 들어 있으며 인형이 없는 칸은 빈칸입니다.</description>
    </item>
    
    <item>
      <title>Programmers 70128 내적</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-70128-inner-product/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-70128-inner-product/</guid>
      <description>Programmers - 70128 내적 Task description 원문 : Programmers 70128 링크
 길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다. a와 b의 내적을 return 하도록 solution 함수를 완성해주세요.
  이때, a와 b의 내적은 a[0]*b[0] + a[1]*b[1] + &amp;hellip; + a[n-1]*b[n-1] 입니다. (n은 a, b의 길이)
 Condition   a, b의 길이는 1 이상 1,000 이하입니다. a, b의 모든 수는 -1,000 이상 1,000 이하입니다.   input output    a b result     [1,2,3,4] [-3,-1,0,2] 3   [-1,0,1] [1,0,-1] -2     입출력 예 설명</description>
    </item>
    
    <item>
      <title>Programmers 42748 K번째 수</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42748-kth-number/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42748-kth-number/</guid>
      <description>Programmers - 42748 K번째 수 Task description 원문 : Programmers 42748 링크
 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.
  예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면
  array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다. 1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다. 2에서 나온 배열의 3번째 숫자는 5입니다.</description>
    </item>
    
    <item>
      <title>Programmers 72410 신규 아이디 추천</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-72410-new-id-recommendation/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-72410-new-id-recommendation/</guid>
      <description>Programmers - 72410 신규 아이디 추천 Task description 원문 : Programmers 72410 링크
 카카오에 입사한 신입 개발자 네오는 &amp;ldquo;카카오계정개발팀&amp;quot;에 배치되어, 카카오 서비스에 가입하는 유저들의 아이디를 생성하는 업무를 담당하게 되었습니다. &amp;ldquo;네오&amp;quot;에게 주어진 첫 업무는 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는 아이디를 입력했을 때, 입력된 아이디와 유사하면서 규칙에 맞는 아이디를 추천해주는 프로그램을 개발하는 것입니다. 다음은 카카오 아이디의 규칙입니다.
  아이디의 길이는 3자 이상 15자 이하여야 합니다. 아이디는 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.</description>
    </item>
    
    <item>
      <title>Programmers 42576 완주하지 못한 선수</title>
      <link>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42576-players-who-did-not-finish/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/codingtest/algorithm/programmers/programmers-42576-players-who-did-not-finish/</guid>
      <description>Programmers - 42576 완주하지 못한 선수 Task description 원문 : Programmers 42576 링크
 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다. 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.
 Condition   마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다. completion의 길이는 participant의 길이보다 1 작습니다.</description>
    </item>
    
  </channel>
</rss>
