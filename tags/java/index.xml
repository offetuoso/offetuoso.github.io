<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on offetuoso&#39;s Blog</title>
    <link>https://offetuoso.github.io/tags/java/</link>
    <description>Recent content in java on offetuoso&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <copyright>© 2021</copyright>
    <lastBuildDate>Mon, 15 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://offetuoso.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>자바의 기본개념</title>
      <link>https://offetuoso.github.io/blog/basic-java/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/basic-java/</guid>
      <description>자바 자바가상머신 (JVM) 자바의 장점 자바의 단점 자바의 기초 문법 객체지향과 자바 객체지향 프로그램 언어 객체 상속 오버라이딩 VS 오버로딩 ##오버라이딩 (Overriding)
 오버라이딩이란?
  사전적 의미로는 more important than any other considerations 번역해 보면 다른 고려 사항보다 더 중요하다 이다.
  부모 클래스로 부터 상속받은 메소드를 자식 클래스에서 재정의 하여, 덮어 쓰는 것이다. 상속받은 메소드를 그대로 사용할 수도 있지만, 자식 클래스에서 상황에 맞게 변경해야 하는 경우 오버라이딩을 사용한다.</description>
    </item>
    
  </channel>
</rss>
