<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Greedy on offetuoso&#39;s Blog</title>
    <link>https://offetuoso.github.io/tags/greedy/</link>
    <description>Recent content in Greedy on offetuoso&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <copyright>© 2021</copyright>
    <lastBuildDate>Tue, 20 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://offetuoso.github.io/tags/greedy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>숫자 카드 게임 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/202104/games-of-number-card/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/202104/games-of-number-card/</guid>
      <description>[문제1] 숫자 카드 게임 ###[문제] 숫자 카드 게임 : 문제 설명
 숫자 카드 게임은 여러 개의 숫자 카드 중에서 가장 높은 숫자가 쓰인 카드 한 장을 뽑는 게임이다. 단, 게임의 룰을 지키며 카드를 뽑아야 하고 룰은 다음과 같다.
 숫자가 쓰인 카드들이 N x M 형태로 놓여 있다. 이때 N은 행의 개수를 의미하며, M은 열의 개수를 의미한다. 먼저 뽑고자 하는 카드가 포함되어 있는 행을 선택한다. 그다음 선택된 행에 포함된 카드들 중 가장 숫자가 낮은 카드를 뽑아야 한다.</description>
    </item>
    
    <item>
      <title>큰수의 법칙 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/202104/law-of-large-number/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/202104/law-of-large-number/</guid>
      <description>[문제1] 큰 수의 법칙 ###[문제] 큰 수의 법칙 : 문제 설명
 출제자는 큰 수의 법칙을 본인만의 방식으로 다르게 사용하고 있다. 이 큰 수의 법칙은 다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰수를 만드는 법칙이다. 단 배열의 특정한 인덱스(번호)에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없는 것이 이 법칙의 특징이다.
  예를 들어 순서대로 2, 4, 5, 4, 6으로 이루어진 배열이 있을 때 M이 8이고, K가 3이라고 가정하자.</description>
    </item>
    
    <item>
      <title>거스름돈 (그리디 알고리즘)</title>
      <link>https://offetuoso.github.io/blog/algorithm/202103/reverse-charge/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offetuoso.github.io/blog/algorithm/202103/reverse-charge/</guid>
      <description>[문제1] 거스름돈 ###[문제] 거스름돈 : 문제 설명
 당신은 음식점의 계산을 도와주는 점원입니다. 카운트에서는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정합니다. 손님에게 거슬러 주어야 할 돈이 N원일 때, 거슬러 주어야 할 동전의 최소 개수를 구하세요. 단, 거슬로 줘야 할 돈은 N은 항상 10의 배수입니다.
 ###[문제] 거스름돈 : 문제 해결 아이디어
  최적의 해를 빠르게 구하기 위해서는 가장 큰 화폐의 단위부터 돈을 거슬러 주면 됩니다. N원을 거슬러 줘야 할 때, 가장먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러줍니다.</description>
    </item>
    
  </channel>
</rss>
